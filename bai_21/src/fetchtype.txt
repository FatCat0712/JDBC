Định nghĩa:

+ FetchType là một thuộc tính trong các annotation @OneToOne, @OneToMany, @ManyToOne, @ManyToMany, được dùng để định nghĩa phương thức lấy các đối tượng liên quan.

Ví dụ 
	company				employee
	+ id INT(11)			+ id INT(11)
	+ name VARCHAR(45)		+ company_id INT(11)
	+ address VARCHAR(255)		+ name VARCHAR(45)

Quan hệ giữa company và employee là một nhiều

Code:
	@Entity
	@Table(name = "company")
	public class Company {
	//...
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "company")
	private List<Employee> listEmployee = new ArrayList<>();

* Giải thích

Annotation @OneToMany định nghĩa quan hệ giữa company và employee là 1-n. Trong đó có thuộc tính fetch:

+ fetch = FetchType.LAZY tức là khi bạn find, select đối tượng company từ database thì nó sẽ không lấy các đối tượng Employee liên quan

+ fetch = FetchType.EAGER tức là khi bạn find, select đối tượng Company từ database thì tất cả các đối tượng Employee liên quan sẽ đưuọc lấy ra và lưu vào listEmployee

* Lưu ý 

+ fetch = FetchType.LAZY tức là mặc định không lấy ra các đối tượng liên quan nhưng bên trong transaction, bạn gọi method company.getListEmployee() thì nó vẫn có dữ liệu. Bởi vì khi gọi method nó sẽ query các đối tượng Employee liên quan và lưu vào listEmployee, và khi kết thúc transaction listEmployee sẽ chứa các Employee liên quan. Tuy nhiên nếu không gọi method thì listEmployee không có dữ liệu và khi kết thúc transaction listEmployee sẽ không có đối tượng employee nào

+ fetch = FetchType.EAGER thì khi lấy đối tượng Company là nó mặc định query luôn các đối tượng Employee liên quan và lưu vào listEmployee, do đó khi kết thúc transaction, listEmployee sẽ có chứa các đối tượng Employee của Company đó.

* FetchType mặc định

+ Với annotation @ManyToOne và @OneToOne thì fetchType mặc định là EAGER

+ Với annotation @ManyToMany và @OneToMany thì fetchType mặc định là LAZY

* Ưu nhược điểm của mỗi loại FetchType

+ Lazy Loading

	. Ưu điểm: tiết kiệm thời gian và bộ nhớ khi select
	. Nhược điểm: gây ra lỗi LazyInitializationException, khi muốn lấy các đối tượng liên quan phải mở transaction 1 lần nữa để query

+ Egear Loading
	
	. Ưu điểm: có thể lấy luôn các đối tượng liên quan, xử lý đơn giản, tiện lợi
	. Nhược điểm: tốn nhiều thời gian và bộ nhớ khi SELECT, dữ liệu lấy ra bị thừa, không cần thiết
	
	
